import{c as q,b as E,d as v,e as x,f as y,m,v as b}from"./webgpuHelper-CfecVt5i.js";/* empty css              */const r=document.getElementById("canvas");r.width=window.innerWidth;r.height=window.innerHeight;let t,S,h,g,M,l,U,w,B,A=r.width/r.height;const z=q(1,1,1);let d=[0,0],p,P=2;(async()=>(await O(),T(),I(z),L(),R(),X(r),V(),requestAnimationFrame(G)))();async function O(){const e=await E(r);t=e.device,S=e.context,h=e.format,w=v(r,t),B=x(r,t,h)}function T(){g=t.createRenderPipeline({layout:"auto",vertex:{module:t.createShaderModule({code:y}),entryPoint:"vs_main",buffers:[{arrayStride:32,attributes:[{shaderLocation:0,format:"float32x4",offset:0},{shaderLocation:1,format:"float32x4",offset:16}]}]},fragment:{module:t.createShaderModule({code:y}),entryPoint:"fs_main",targets:[{format:h}]},primitive:{topology:"triangle-list"},depthStencil:{format:"depth24plus",depthWriteEnabled:!0,depthCompare:"less"},multisample:{count:4}})}function I(e){M=Y(t,e)}function L(){l=t.createBuffer({size:208,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST})}function R(){U=t.createBindGroup({layout:g.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:l}}]})}function G(){V();const e=t.createCommandEncoder(),n=e.beginRenderPass({colorAttachments:[{view:B.createView(),resolveTarget:S.getCurrentTexture().createView(),loadOp:"clear",storeOp:"store",clearValue:{r:.3,g:.3,b:.3,a:1}}],depthStencilAttachment:{view:w.createView(),depthLoadOp:"clear",depthStoreOp:"store",depthClearValue:1}});n.setPipeline(g),W(n,M,U,z.length/8),n.end(),t.queue.submit([e.finish()]),requestAnimationFrame(G)}function X(e){let n=!1,i=-1,f=-1;e.onmousedown=function(o){const s=o.target,a=o.clientX,u=o.clientY;if(o.target){const c=s.getBoundingClientRect();c.left<=a&&a<c.right&&c.top<=u&&u<c.bottom&&(i=a,f=u,n=!0)}},e.onmouseup=function(){n=!1},e.onmousemove=function(o){const s=o.clientX,a=o.clientY;if(n){const u=Math.PI/e.height*.5,c=u*(s-i),C=u*(a-f);d[0]=Math.max(Math.min(d[0]+C,Math.PI/2),-Math.PI/2),d[1]=d[1]+c}i=s,f=a}}function Y(e,n){const i=e.createBuffer({size:n.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});return e.queue.writeBuffer(i,0,n),i}function V(){const{perspective:e,view:n}=F(),i=m.identity();t.queue.writeBuffer(l,0,i),t.queue.writeBuffer(l,64,n),t.queue.writeBuffer(l,128,e),t.queue.writeBuffer(l,192,new Float32Array(p))}function F(){const e=90*Math.PI/180,f=m.perspective(e,A,.1,1e3);let o,s=new Float32Array([1,1,2]),a=b.transformMat4(s,m.rotationX(-d[0]*P));p=b.transformMat4(a,m.rotationY(-d[1]*P)),o=[0,0,0];const u=[0,1,0],c=m.lookAt(p,o,u);return{perspective:f,view:c}}function W(e,n,i,f){e.setBindGroup(0,i),e.setVertexBuffer(0,n),e.draw(f,1,0,0)}window.addEventListener("resize",()=>{r.width=window.innerWidth,r.height=window.innerHeight,A=r.width/r.height,w=v(r,t),B=x(r,t,h)});
